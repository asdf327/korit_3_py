"""
생성자를 통한 주입
"""

class 무기:
    def __init__(self, 공격력):
        self.공격력 = 공격력

    def 공격(self): #추상 메서드
        pass

class 총(무기): # 상속
    def __init__(self, 공격력, 총알): # 무기의 공격력을 받음
        # super(공격력) # 오류
        super().__init__(공격력) # 생성자를 따로 호출해야 함
        self.총알 = 총알 # 총알은 총에게만 있기에 self로 서술

    def 공격(self): #상속 오버라이딩
        print(f"총을 쏜다. (데미지: {self.공격력})") # 상속을 받았기에 공격력이 생김
        self.총알소비()

    def 총알소비(self):
        self.총알 -= 1
        print(f"현재 남은 총알: {self.총알}발")

class 칼(무기):
    def __init__(self, 공격력):
        super().__init__(공격력)

    def 공격(self):
        print(f"칼을 휘두른다. (데미지: {self.공격력})")

class 손:
    def __init__(self, 타입, 무기):
        self.타입 = 타입 #왼손인지 오른손인지 구분
        self.무기 = 무기

    def 장권(self):
        print(f"{self.타입}으로 공격")
        self.무기.공격()

# 총1 = 총(100)
# 총1.공격() # 총을 쏜다. (데미지: 100)
#
# 칼1 = 칼(50)
# 칼1.공격() # 칼을 휘두른다. (데미지: 50)

오른손 = 손("오른손", 칼(50))
왼손 = 손("왼손", 총(100, 7))

오른손.장권()
"""
오른손으로 공격
칼을 휘두른다. (데미지: 50)
"""
왼손.장권()
왼손.장권()
왼손.장권()
"""
왼손으로 공격
총을 쏜다. (데미지: 100)
현재 남은 총알: 6발
왼손으로 공격
총을 쏜다. (데미지: 100)
현재 남은 총알: 5발
왼손으로 공격
총을 쏜다. (데미지: 100)
현재 남은 총알: 4발
"""